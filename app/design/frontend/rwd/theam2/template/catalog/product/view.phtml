<?php
/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="row product-info full">
    <div class="col-sm-4 images-block">
        <?php echo $this->getChildHtml('media') ?>

    </div>
    <div class="col-sm-8 product-details">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?> class="form-horizontal">
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>

            <div class="panel-smart">
            <div class="product-name">
                <h2><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h2>
            </div>
            <hr />

<!--            Main product attributes to show for the customer-->
            <ul class="list-unstyled manufacturer">
                <li>
                    <span><?php echo $this->__('Sku');?>:</span> <?php echo $_product->getSku(); ?>
                </li>
            </ul>
            <hr />

<!--            Short description SEO!-->
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>

            <hr />

            <div class="price-info">
                <span><?php echo $this->__('Prices starting from'); ?></span>
                <?php echo $this->getPriceHtml($_product); ?>
                <?php echo $this->getChildHtml('bundle_prices') ?>
                <?php echo $this->getTierPriceHtml() ?>
            </div>

            <hr />
            <?php echo $this->getChildHtml('sharing') ?>
            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <hr />
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
        </form>
    </div>
</div>



    <script type="text/javascript">
        //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                    form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
        //]]>
    </script>